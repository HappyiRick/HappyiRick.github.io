<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://happyirick.github.io//</id><title>irick's home</title><subtitle>irick's homepage.</subtitle> <updated>2022-04-07T21:36:32+08:00</updated> <author> <name>irick</name> <uri>https://happyirick.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="https://happyirick.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://happyirick.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 irick </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>《原则》</title><link href="https://happyirick.github.io//posts/priciplesReadNote/" rel="alternate" type="text/html" title="《原则》" /><published>2022-03-27T19:55:00+08:00</published> <updated>2022-04-07T21:32:42+08:00</updated> <id>https://happyirick.github.io//posts/priciplesReadNote/</id> <content src="https://happyirick.github.io//posts/priciplesReadNote/" /> <author> <name>{"name"=>"irick", "link"=>"https://github.com/Happyirick"}</name> </author> <category term="读书笔记" /> <summary> 很难将原则定义为一般的案例教学书，不仅因为它的作者是大名鼎鼎的桥水基金创始人，同时也因为其中的很多建设性意见和建议实在是非常地接地气，例如要极度求真、要保持心态极度开放，这都是对生活和工作体验到更高层次后发出的由衷的感慨，未能早点读完这本书，真的是稍微有点遗憾。 书里一共讲到三个部分，首先讲了作者自己的一些历史，然后重点谈到了生活和工作中的原则，着实让人受益匪浅。 本文重点谈一谈个人对生活和工作原则的理解。 生活原则 在生活原则中，作者主要讲到了人的处事原则，做事的方法，心态，观点，以及提高效率，个人认为，这也是我们应该遵循的处理生活问题的几个关键流程。 首先强调了要直面现实中的问题，当问题来临的时候，我们不能采取躲避或者拖延的方式来幻想解决它，而是要从实际出发，做好观察，分析主客观条件，整理资源，对自己所处的环境做出清晰的判断。 然后在认清客观条... </summary> </entry> <entry><title>Github+PicGo+jsDelivr创建稳定图床</title><link href="https://happyirick.github.io//posts/pictureBed/" rel="alternate" type="text/html" title="Github+PicGo+jsDelivr创建稳定图床" /><published>2022-03-17T19:55:00+08:00</published> <updated>2022-03-17T19:55:00+08:00</updated> <id>https://happyirick.github.io//posts/pictureBed/</id> <content src="https://happyirick.github.io//posts/pictureBed/" /> <author> <name>{"name"=>"irick", "link"=>"https://github.com/Happyirick"}</name> </author> <category term="日有寸进" /> <summary> 图床是用来存储图片资源用于blog或者其他应用的网络资源库，对于个人blog来说，稳定长期且经济适用的图床非常重要 主要涉及三个服务 Github为我们提供稳定的站点 PicGo用来作为图床配置，管理图床图片 jsDelivr是开源的CDN服务，用来加速图片访问 1.Github配置 1.1 申请图床仓库 1.2 申请Personal Token 到 __Setting–Developer settings–Personal access tokens__申请新的token，申请完之后记得保存 2.PicGo安装 PicGo release 传送门 前往PicGo的Github地址下载并安装PicGo 3.PicGo配置 JSDELIVR 我的配置 其中，指定存储路径之后需要带/以创建路径 打开时间戳设置 在图... </summary> </entry> <entry><title>Clang-format结合Xcode File-template、Code Snippet探索iOS代码规范实践</title><link href="https://happyirick.github.io//posts/codeFormat/" rel="alternate" type="text/html" title="Clang-format结合Xcode File-template、Code Snippet探索iOS代码规范实践" /><published>2022-03-09T19:55:00+08:00</published> <updated>2022-03-17T16:42:37+08:00</updated> <id>https://happyirick.github.io//posts/codeFormat/</id> <content src="https://happyirick.github.io//posts/codeFormat/" /> <author> <name>{"name"=>"irick", "link"=>"https://github.com/Happyirick"}</name> </author> <category term="iOS" /> <summary> 代码规范是每一个开发小组在实践中的一个痛点，如何让队伍中尽可能多的人遵循同一套代码风格，产出高质量的代码，同时能够尊重每位开发者的编程习惯，不增加冗余环节，是值得每个工程师思考的问题 在本文中，将利用Clang-format工具结合Xcode自带文件模版、Code Snippet探索iOS代码规范实践 Clang-format ClangFormat describes a set of tools that are built on top of LibFormat. It can support your workflow in a variety of ways including a standalone tool and editor integrations. Clang-format 是一个代码格式化工具，能够为C/C++/Java/Java... </summary> </entry> <entry><title>Github部署--开启写作之路 (下)</title><link href="https://happyirick.github.io//posts/githubDeploy/" rel="alternate" type="text/html" title="Github部署--开启写作之路 (下)" /><published>2022-03-03T18:55:00+08:00</published> <updated>2022-03-03T20:50:18+08:00</updated> <id>https://happyirick.github.io//posts/githubDeploy/</id> <content src="https://happyirick.github.io//posts/githubDeploy/" /> <author> <name>{"name"=>"irick", "link"=>"https://github.com/Happyirick"}</name> </author> <category term="日有寸进" /> <summary> 在本文中，将使用Gitbook + Github pages搭建属于自己的Blog，终端环境为zsh，设备为Macbook. 上一篇中，我们讲了Gitbook的安装、构建及启动服务，这样只是完成了gitbook的本地化工作，如果我们想让更多人看到我们的电子书，就需要将其部署在公共服务器上了。对于个人博客来说，还有一条更方便的路径，便是利用Github提供的pages功能及公开仓库来完成网络电子书的部署。 1.Github pages搭建 1.1 建立github pages仓库 仓库名称必须为 ${你的github名称}.github.io 1.2 设置主页 进入 ${你的github username}.github.io仓库，点击Settings &amp;gt; Pages » Theme chooser 然后就可以选择一个jeklly提供的模板主题，同... </summary> </entry> <entry><title>Gitbook配置--开启写作之路 (上)</title><link href="https://happyirick.github.io//posts/gitbookConfig/" rel="alternate" type="text/html" title="Gitbook配置--开启写作之路 (上)" /><published>2022-02-28T19:55:00+08:00</published> <updated>2022-03-03T20:24:06+08:00</updated> <id>https://happyirick.github.io//posts/gitbookConfig/</id> <content src="https://happyirick.github.io//posts/gitbookConfig/" /> <author> <name>{"name"=>"irick", "link"=>"https://github.com/Happyirick"}</name> </author> <category term="日有寸进" /> <summary> 在本文中，将使用Gitbook + Github pages搭建属于自己的Blog，终端环境为zsh，设备为Macbook. 1.node.js 安装 gitbook作为一个电子书写作框架，需要nodejs提供页面渲染支持，以及npm包管理工具来提供自定义插件进行使用。 由于gitbook作者目前已经转向gitbook的商业化运作，因此gitbook目前公开的部署版本已经是几年前了，所以高版本的node部署起来会有一定的问题，建议如果不需要使用nodejs新特性的朋友，可以安装6.x版本node.js 6.x . 当然，如果需要跟随新特性的话，可以使用homebrew来进行安装，不过会存在一部分问题，我们可以一起来解决一下, 同时，有一部分插件随着nodejs版本的升高也无法使用，因此本文中homebrew选用的nodejs版本为node@12. brew sear... </summary> </entry> </feed>
